{
  "contractName": "ZombieLeaderboard",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_zombieId",
          "type": "uint256"
        }
      ],
      "name": "levelUp",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_zombieId",
          "type": "uint256"
        },
        {
          "name": "_kittyId",
          "type": "uint256"
        }
      ],
      "name": "feedOnKitty",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "zombies",
      "outputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "dna",
          "type": "uint256"
        },
        {
          "name": "level",
          "type": "uint32"
        },
        {
          "name": "readyTime",
          "type": "uint32"
        },
        {
          "name": "winCount",
          "type": "uint16"
        },
        {
          "name": "lossCount",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "existingNames",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getZombiesByOwner",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "existingZombieNames",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "zombieToOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "setKittyContractAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_zombieId",
          "type": "uint256"
        },
        {
          "name": "_newDna",
          "type": "uint256"
        }
      ],
      "name": "changeDna",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "createRandomZombie",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "leaderboard",
      "outputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "winCount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_zombieId",
          "type": "uint256"
        },
        {
          "name": "_newName",
          "type": "string"
        }
      ],
      "name": "changeName",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setLevelUpFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_zombieId",
          "type": "uint256"
        }
      ],
      "name": "levelDown",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "winCount",
          "type": "uint256"
        }
      ],
      "name": "LeaderboardUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "zombieId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "name": "dna",
          "type": "uint256"
        }
      ],
      "name": "NewZombie",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.25+commit.59dbf8f1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_zombieId\",\"type\":\"uint256\"}],\"name\":\"levelUp\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_zombieId\",\"type\":\"uint256\"},{\"name\":\"_kittyId\",\"type\":\"uint256\"}],\"name\":\"feedOnKitty\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zombies\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"dna\",\"type\":\"uint256\"},{\"name\":\"level\",\"type\":\"uint32\"},{\"name\":\"readyTime\",\"type\":\"uint32\"},{\"name\":\"winCount\",\"type\":\"uint16\"},{\"name\":\"lossCount\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"existingNames\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getZombiesByOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"existingZombieNames\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zombieToOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setKittyContractAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_zombieId\",\"type\":\"uint256\"},{\"name\":\"_newDna\",\"type\":\"uint256\"}],\"name\":\"changeDna\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"createRandomZombie\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"leaderboard\",\"outputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"winCount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_zombieId\",\"type\":\"uint256\"},{\"name\":\"_newName\",\"type\":\"string\"}],\"name\":\"changeName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setLevelUpFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_zombieId\",\"type\":\"uint256\"}],\"name\":\"levelDown\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"winCount\",\"type\":\"uint256\"}],\"name\":\"LeaderboardUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"zombieId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"name\":\"dna\",\"type\":\"uint256\"}],\"name\":\"NewZombie\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/ZombieLeaderboard.sol\":\"ZombieLeaderboard\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/ZombieLeaderboard.sol\":{\"keccak256\":\"0x216147fedf847c483426479f70992466eae3f357372474cf78c72f3f1cdd6cf3\",\"urls\":[\"bzzr://fa78fd5e626918323eeadcacea4ca36472021223bf70157df1d73be80b0d4ff9\"]},\"project:/contracts/ownable.sol\":{\"keccak256\":\"0x48b9aba60b0374f6e0ed5d378f3ebac13f4518b0bcdfc44ce489c172ca47078c\",\"urls\":[\"bzzr://a06f6e67c93d1b795cdc96a2fd2fdab3ee4cdd7c04a3d2de525cd9290c99fa4e\"]},\"project:/contracts/safemath.sol\":{\"keccak256\":\"0xc1bcca68fae1fae647e4fd8daa394f978691ae34ffbd07b920b66f05b16556c8\",\"urls\":[\"bzzr://20c2a2ca2901dea117898d387b578a145c366cde32d073f0df475314d8bc088f\"]},\"project:/contracts/zombiefactory.sol\":{\"keccak256\":\"0xd62105802b77b56c29435c59bd9fe1f765e699e7ed846c0ea51a68f67464ea93\",\"urls\":[\"bzzr://76be2b695a9cdb07405ba23460ebeb394f9e3d72ab0664fce982221254420a86\"]},\"project:/contracts/zombiefeeding.sol\":{\"keccak256\":\"0xc8660fb9f11172a47f0ba395c13a173182d0b597e606acad4144cb8678245300\",\"urls\":[\"bzzr://1b4bb904d9033beb2c5560d3d5fc62eb438fc5becf8e174ee406af5a4fa5f2a5\"]},\"project:/contracts/zombiehelper.sol\":{\"keccak256\":\"0xdb2f117369c1cdc8fbc4914d2275e535e5b3a7954808363807f0534d5873c007\",\"urls\":[\"bzzr://8ec7870c4a70a00c24b1c3ab365837ee1d547151b9c579d6c932bef9d2fa624a\"]}},\"version\":1}",
  "bytecode": "0x60806040526010600155600154600a0a600255603c60035566038d7ea4c68000600955336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a361225d806100ed6000396000f300608060405260043610610107576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630ce90ec21461010c57806317a7f4cc146101285780632052465e1461015157806327cdbf4a146101935780633ccfd60b146101d05780634412e104146101e757806347b5172114610224578063528b7b8f146102615780635f4623f11461029e5780635faf2880146102c7578063715018a6146102f05780637bff0a01146103075780638da5cb5b146103305780638f32d59b1461035b578063bf36839914610386578063c39cbef1146103c4578063ccf670f8146103ed578063e14d2cee14610416578063f2fde38b1461043f575b600080fd5b61012660048036036101219190810190611cbc565b610468565b005b34801561013457600080fd5b5061014f600480360361014a9190810190611d3d565b610503565b005b34801561015d57600080fd5b5061017860048036036101739190810190611cbc565b6106ef565b60405161018a96959493929190611fa7565b60405180910390f35b34801561019f57600080fd5b506101ba60048036036101b59190810190611c52565b61080e565b6040516101c79190611f5c565b60405180910390f35b3480156101dc57600080fd5b506101e561082e565b005b3480156101f357600080fd5b5061020e60048036036102099190810190611b4e565b6108ae565b60405161021b9190611f3a565b60405180910390f35b34801561023057600080fd5b5061024b60048036036102469190810190611c52565b6109e0565b6040516102589190611f5c565b60405180910390f35b34801561026d57600080fd5b5061028860048036036102839190810190611cbc565b610a00565b6040516102959190611f1f565b60405180910390f35b3480156102aa57600080fd5b506102c560048036036102c09190810190611b4e565b610a33565b005b3480156102d357600080fd5b506102ee60048036036102e99190810190611d3d565b610a8a565b005b3480156102fc57600080fd5b50610305610b6c565b005b34801561031357600080fd5b5061032e60048036036103299190810190611c7b565b610c3e565b005b34801561033c57600080fd5b50610345610d97565b6040516103529190611f1f565b60405180910390f35b34801561036757600080fd5b50610370610dc0565b60405161037d9190611f5c565b60405180910390f35b34801561039257600080fd5b506103ad60048036036103a89190810190611cbc565b610e17565b6040516103bb929190611f77565b60405180910390f35b3480156103d057600080fd5b506103eb60048036036103e69190810190611ce5565b610ee2565b005b3480156103f957600080fd5b50610414600480360361040f9190810190611cbc565b6111df565b005b34801561042257600080fd5b5061043d60048036036104389190810190611cbc565b6111fc565b005b34801561044b57600080fd5b5061046660048036036104619190810190611b4e565b61133f565b005b6009543414151561047857600080fd5b6104c2600160048381548110151561048c57fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff1661135e90919063ffffffff16565b6004828154811015156104d157fe5b906000526020600020906003020160020160006101000a81548163ffffffff021916908363ffffffff16021790555050565b600080836005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561057457600080fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e98b7f4d856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016105eb919061204f565b61014060405180830381600087803b15801561060657600080fd5b505af115801561061a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061063e9190810190611b77565b9091929394959697985090919293949596975090919293949596509091929394955090919293945090919293509091925090915090508093505060028360048781548110151561068a57fe5b906000526020600020906003020160010154018115156106a657fe5b0491506106e86040805190810160405280600b81526020017f4b697474795a6f6d62696500000000000000000000000000000000000000000081525083611388565b5050505050565b6004818154811015156106fe57fe5b9060005260206000209060030201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107aa5780601f1061077f576101008083540402835291602001916107aa565b820191906000526020600020905b81548152906001019060200180831161078d57829003601f168201915b5050505050908060010154908060020160009054906101000a900463ffffffff16908060020160049054906101000a900463ffffffff16908060020160089054906101000a900461ffff169080600201600a9054906101000a900461ffff16905086565b600a6020528060005260406000206000915054906101000a900460ff1681565b6000610838610dc0565b151561084357600080fd5b61084b610d97565b90508073ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f193505050501580156108aa573d6000803e3d6000fd5b5050565b606080600080600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040519080825280602002602001820160405280156109225781602001602082028038833980820191505090505b50925060009150600090505b6004805490508110156109d5578473ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156109c8578083838151811015156109b157fe5b906020019060200201818152505081806001019250505b808060010191505061092e565b829350505050919050565b60076020528060005260406000206000915054906101000a900460ff1681565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a3b610dc0565b1515610a4657600080fd5b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60148281600482815481101515610a9d57fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff1610151515610ad257600080fd5b836005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b4057600080fd5b83600486815481101515610b5057fe5b9060005260206000209060030201600101819055505050505050565b610b74610dc0565b1515610b7f57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600080826040516020018082805190602001908083835b602083101515610c7a5780518252602082019150602081019050602083039250610c55565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083101515610ce35780518252602082019150602081019050602083039250610cbe565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020915060076000836000191660001916815260200190815260200160002060009054906101000a900460ff16151515610d7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d749061202f565b60405180910390fd5b610d8683611716565b9050610d928382611388565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b600b81815481101515610e2657fe5b9060005260206000209060020201600091509050806000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ed25780601f10610ea757610100808354040283529160200191610ed2565b820191906000526020600020905b815481529060010190602001808311610eb557829003601f168201915b5050505050908060010154905082565b600080846005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f5357600080fd5b8484604051602001808383808284378201915050925050506040516020818303038152906040526040518082805190602001908083835b602083101515610faf5780518252602082019150602081019050602083039250610f8a565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390209250600a6000846000191660001916815260200190815260200160002060009054906101000a900460ff16151515611049576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110409061202f565b60405180910390fd5b60048681548110151561105857fe5b906000526020600020906003020160000160405160200180828054600181600116156101000203166002900480156110c75780601f106110a55761010080835404028352918201916110c7565b820191906000526020600020905b8154815290600101906020018083116110b3575b50509150506040516020818303038152906040526040518082805190602001908083835b60208310151561111057805182526020820191506020810190506020830392506110eb565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051809103902091506000600a6000846000191660001916815260200190815260200160002060006101000a81548160ff021916908315150217905550848460048881548110151561118457fe5b906000526020600020906003020160000191906111a2929190611923565b506001600a6000856000191660001916815260200190815260200160002060006101000a81548160ff021916908315150217905550505050505050565b6111e7610dc0565b15156111f257600080fd5b8060098190555050565b6000816005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561126c57600080fd5b60048381548110151561127b57fe5b9060005260206000209060030201915060018260020160009054906101000a900463ffffffff1663ffffffff161115156112ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e19061200f565b60405180910390fd5b61131860018360020160009054906101000a900463ffffffff1663ffffffff1661180490919063ffffffff16565b8260020160006101000a81548163ffffffff021916908363ffffffff160217905550505050565b611347610dc0565b151561135257600080fd5b61135b81611829565b50565b60008082840190508363ffffffff168163ffffffff161015151561137e57fe5b8091505092915050565b600080836040516020018082805190602001908083835b6020831015156113c4578051825260208201915060208101905060208303925061139f565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310151561142d5780518252602082019150602081019050602083039250611408565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020915060076000836000191660001916815260200190815260200160002060009054906101000a900460ff161515156114c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114be9061202f565b60405180910390fd5b6001600460c060405190810160405280878152602001868152602001600163ffffffff16815260200162015180420163ffffffff168152602001600061ffff168152602001600061ffff1681525090806001815401808255809150509060018203906000526020600020906003020160009091929091909150600082015181600001908051906020019061155c9291906119a3565b506020820151816001015560408201518160020160006101000a81548163ffffffff021916908363ffffffff16021790555060608201518160020160046101000a81548163ffffffff021916908363ffffffff16021790555060808201518160020160086101000a81548161ffff021916908361ffff16021790555060a082015181600201600a6101000a81548161ffff021916908361ffff1602179055505050039050336005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906001019190505550600160076000846000191660001916815260200190815260200160002060006101000a81548160ff0219169083151502179055507f88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b78185856040516117089392919061206a565b60405180910390a150505050565b600080826040516020018082805190602001908083835b602083101515611752578051825260208201915060208101905060208303925061172d565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b6020831015156117bb5780518252602082019150602081019050602083039250611796565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600190049050600254818115156117fb57fe5b06915050919050565b60008263ffffffff168263ffffffff161115151561181e57fe5b818303905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561186557600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061196457803560ff1916838001178555611992565b82800160010185558215611992579182015b82811115611991578235825591602001919060010190611976565b5b50905061199f9190611a23565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106119e457805160ff1916838001178555611a12565b82800160010185558215611a12579182015b82811115611a115782518255916020019190600101906119f6565b5b509050611a1f9190611a23565b5090565b611a4591905b80821115611a41576000816000905550600101611a29565b5090565b90565b6000611a548235612190565b905092915050565b6000611a6882516121b0565b905092915050565b6000611a7c82356121bc565b905092915050565b60008083601f8401121515611a9857600080fd5b8235905067ffffffffffffffff811115611ab157600080fd5b602083019150836001820283011115611ac957600080fd5b9250929050565b600082601f8301121515611ae357600080fd5b8135611af6611af1826120d5565b6120a8565b91508082526020830160208301858383011115611b1257600080fd5b611b1d8382846121d0565b50505092915050565b6000611b3282356121c6565b905092915050565b6000611b4682516121c6565b905092915050565b600060208284031215611b6057600080fd5b6000611b6e84828501611a48565b91505092915050565b6000806000806000806000806000806101408b8d031215611b9757600080fd5b6000611ba58d828e01611a5c565b9a50506020611bb68d828e01611a5c565b9950506040611bc78d828e01611b3a565b9850506060611bd88d828e01611b3a565b9750506080611be98d828e01611b3a565b96505060a0611bfa8d828e01611b3a565b95505060c0611c0b8d828e01611b3a565b94505060e0611c1c8d828e01611b3a565b935050610100611c2e8d828e01611b3a565b925050610120611c408d828e01611b3a565b9150509295989b9194979a5092959850565b600060208284031215611c6457600080fd5b6000611c7284828501611a70565b91505092915050565b600060208284031215611c8d57600080fd5b600082013567ffffffffffffffff811115611ca757600080fd5b611cb384828501611ad0565b91505092915050565b600060208284031215611cce57600080fd5b6000611cdc84828501611b26565b91505092915050565b600080600060408486031215611cfa57600080fd5b6000611d0886828701611b26565b935050602084013567ffffffffffffffff811115611d2557600080fd5b611d3186828701611a84565b92509250509250925092565b60008060408385031215611d5057600080fd5b6000611d5e85828601611b26565b9250506020611d6f85828601611b26565b9150509250929050565b611d828161213c565b82525050565b6000611d938261210e565b808452602084019350611da583612101565b60005b82811015611dd757611dbb868351611f01565b611dc48261212f565b9150602086019550600181019050611da8565b50849250505092915050565b611dec8161215c565b82525050565b6000611dfd82612124565b808452611e118160208601602086016121df565b611e1a81612212565b602085010191505092915050565b6000611e3382612119565b808452611e478160208601602086016121df565b611e5081612212565b602085010191505092915050565b6000602282527f5a6f6d626965206c6576656c2063616e6e6f74206265206c657373207468616e60208301527f20310000000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b6000601b82527f54686973206e616d6520697320616c72656164792074616b656e2e00000000006020830152604082019050919050565b611efb81612168565b82525050565b611f0a81612176565b82525050565b611f1981612180565b82525050565b6000602082019050611f346000830184611d79565b92915050565b60006020820190508181036000830152611f548184611d88565b905092915050565b6000602082019050611f716000830184611de3565b92915050565b60006040820190508181036000830152611f918185611e28565b9050611fa06020830184611f01565b9392505050565b600060c0820190508181036000830152611fc18189611e28565b9050611fd06020830188611f01565b611fdd6040830187611f10565b611fea6060830186611f10565b611ff76080830185611ef2565b61200460a0830184611ef2565b979650505050505050565b6000602082019050818103600083015261202881611e5e565b9050919050565b6000602082019050818103600083015261204881611ebb565b9050919050565b60006020820190506120646000830184611f01565b92915050565b600060608201905061207f6000830186611f01565b81810360208301526120918185611df2565b90506120a06040830184611f01565b949350505050565b6000604051905081810181811067ffffffffffffffff821117156120cb57600080fd5b8060405250919050565b600067ffffffffffffffff8211156120ec57600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b600061ffff82169050919050565b6000819050919050565b600063ffffffff82169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156121fd5780820151818401526020810190506121e2565b8381111561220c576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a72305820c6af4134582f3a6279fec55ae591f9f4c25e494385d41b5c0777d635a69d86266c6578706572696d656e74616cf50037",
  "deployedBytecode": "",
  "sourceMap": "130:839:2:-;;;283:2:9;266:19;;313:9;;307:2;:15;289:33;;346:9;326:29;;119:11:11;101:29;;511:10:5;502:6;;:19;;;;;;;;;;;;;;;;;;565:6;;;;;;;;;;;532:40;;561:1;532:40;;;;;;;;;;;;130:839:2;;;;;;",
  "deployedSourceMap": "130:839:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;753:157:11;;;;;;;;;;;;;;;;;;;1421:265:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1421:265:10;;;;;;;;;;;;;;;;;;;499:23:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;499:23:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;134:45:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;134:45:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;546:118;;8:9:-1;5:2;;;30:1;27;20:12;5:2;546:118:11;;;;;;1849:334;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1849:334:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;623:51:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;623:51:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;527:46;;8:9:-1;5:2;;;30:1;27;20:12;5:2;527:46:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;558:121:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;558:121:10;;;;;;;;;;;;;;;;;;;1695:150:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1695:150:11;;;;;;;;;;;;;;;;;;;1255:127:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1255:127:5;;;;;;1491:330:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1491:330:9;;;;;;;;;;;;;;;;;;;630:70:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;630:70:5;;;;;;;;;;;;;;;;;;;;913:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;913:83:5;;;;;;;;;;;;;;;;;;;;256:27:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;256:27:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1154:534:11;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1154:534:11;;;;;;;;;;;;;;;;;;;668:81;;8:9:-1;5:2;;;30:1;27;20:12;5:2;668:81:11;;;;;;;;;;;;;;;;;;;913:239;;8:9:-1;5:2;;;30:1;27;20:12;5:2;913:239:11;;;;;;;;;;;;;;;;;;;1540:101:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1540:101:5;;;;;;;;;;;;;;;;;;;753:157:11;830:10;;817:9;:23;809:32;;;;;;;;874:31;903:1;874:7;882:9;874:18;;;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;:28;;;;:31;;;;:::i;:::-;847:7;855:9;847:18;;;;;;;;;;;;;;;;;;;;:24;;;:58;;;;;;;;;;;;;;;;;;753:157;:::o;1421:265:10:-;1509:13;1588:11;1492:9;517:13;:24;531:9;517:24;;;;;;;;;;;;;;;;;;;;;503:38;;:10;:38;;;495:47;;;;;;;;1550:13;;;;;;;;;;;:22;;;1573:8;1550:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1550:32:10;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1550:32:10;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1550:32:10;;;;;;;;;1528:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1640:1;1628:8;1603:7;1611:9;1603:18;;;;;;;;;;;;;;;;;;;;:22;;;:33;1602:39;;;;;;;;1588:53;;1647:36;;;;;;;;;;;;;;;;;;;1676:6;1647:13;:36::i;:::-;1421:265;;;;;:::o;499:23:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;134:45:11:-;;;;;;;;;;;;;;;;;;;;;;:::o;546:118::-;591:14;813:9:5;:7;:9::i;:::-;805:18;;;;;;;;608:7:11;:5;:7::i;:::-;591:24;;621:6;:15;;:38;645:4;637:21;;;621:38;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;621:38:11;546:118;:::o;1849:334::-;1914:6;1928:20;1993:12;2020:6;1962:16;:24;1979:6;1962:24;;;;;;;;;;;;;;;;1951:36;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;1951:36:11;;;;1928:59;;2008:1;1993:16;;2029:1;2020:10;;2015:145;2036:7;:14;;;;2032:1;:18;2015:145;;;2089:6;2069:26;;:13;:16;2083:1;2069:16;;;;;;;;;;;;;;;;;;;;;:26;;;2065:89;;;2125:1;2107:6;2114:7;2107:15;;;;;;;;;;;;;;;;;:19;;;;;2136:9;;;;;;;2065:89;2052:3;;;;;;;2015:145;;;2172:6;2165:13;;1849:334;;;;;;:::o;623:51:9:-;;;;;;;;;;;;;;;;;;;;;;:::o;527:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;558:121:10:-;813:9:5;:7;:9::i;:::-;805:18;;;;;;;;665:8:10;634:13;;:40;;;;;;;;;;;;;;;;;;558:121;:::o;1695:150:11:-;1764:2;1768:9;522:6;494:7;502:9;494:18;;;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;:34;;;;486:43;;;;;;;;1791:9;517:13:10;:24;531:9;517:24;;;;;;;;;;;;;;;;;;;;;503:38;;:10;:38;;;495:47;;;;;;;;1833:7:11;1808;1816:9;1808:18;;;;;;;;;;;;;;;;;;;;:22;;:32;;;;535:1;1695:150;;;;:::o;1255:127:5:-;813:9;:7;:9::i;:::-;805:18;;;;;;;;1349:1;1312:40;;1333:6;;;;;;;;;;;1312:40;;;;;;;;;;;;1375:1;1358:6;;:19;;;;;;;;;;;;;;;;;;1255:127::o;1491:330:9:-;1548:16;1747:8;1594:5;1577:23;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1577:23:9;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1577:23:9;;;1567:34;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1567:34:9;;;;;;;;;;;;;;;;1548:53;;1647:19;:29;1667:8;1647:29;;;;;;;;;;;;;;;;;;;;;;;;;;;1646:30;1638:70;;;;;;;;;;;;;;;;;;;;;;;;1758:25;1777:5;1758:18;:25::i;:::-;1747:36;;1791:25;1805:5;1812:3;1791:13;:25::i;:::-;1491:330;;;:::o;630:70:5:-;667:7;689:6;;;;;;;;;;;682:13;;630:70;:::o;913:83::-;952:4;985:6;;;;;;;;;;;971:20;;:10;:20;;;964:27;;913:83;:::o;256:27:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1154:534:11:-;1249:19;1418;1228:9;517:13:10;:24;531:9;517:24;;;;;;;;;;;;;;;;;;;;;503:38;;:10;:38;;;495:47;;;;;;;;1298:8:11;;1281:26;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1281:26:11;;;1271:37;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1271:37:11;;;;;;;;;;;;;;;;1249:59;;1349:13;:26;1363:11;1349:26;;;;;;;;;;;;;;;;;;;;;;;;;;;1348:27;1340:67;;;;;;;;;;;;;;;;;;;;;;;;1467:7;1475:9;1467:18;;;;;;;;;;;;;;;;;;;;:23;;1450:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1450:41:11;;;1440:52;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1440:52:11;;;;;;;;;;;;;;;;1418:74;;1531:5;1502:13;:26;1516:11;1502:26;;;;;;;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;1607:8;;1581:7;1589:9;1581:18;;;;;;;;;;;;;;;;;;;;:23;;:34;;;;;;;:::i;:::-;;1654:4;1625:13;:26;1639:11;1625:26;;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;1154:534;;;;;;:::o;668:81::-;813:9:5;:7;:9::i;:::-;805:18;;;;;;;;740:4:11;727:10;:17;;;;668:81;:::o;913:239::-;986:23;969:9;517:13:10;:24;531:9;517:24;;;;;;;;;;;;;;;;;;;;;503:38;;:10;:38;;;495:47;;;;;;;;1012:7:11;1020:9;1012:18;;;;;;;;;;;;;;;;;;;;986:44;;1061:1;1044:8;:14;;;;;;;;;;;;:18;;;1036:65;;;;;;;;;;;;;;;;;;;;;;;;1124:21;1143:1;1124:8;:14;;;;;;;;;;;;:18;;;;:21;;;;:::i;:::-;1107:8;:14;;;:38;;;;;;;;;;;;;;;;;;913:239;;;:::o;1540:101:5:-;813:9;:7;:9::i;:::-;805:18;;;;;;;;1608:28;1627:8;1608:18;:28::i;:::-;1540:101;:::o;1789:125:6:-;1845:6;1859:8;1874:1;1870;:5;1859:16;;1893:1;1888:6;;:1;:6;;;;1881:14;;;;;;1908:1;1901:8;;1789:125;;;;;:::o;724:529:9:-;789:16;988:7;835:5;818:23;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;818:23:9;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;818:23:9;;;808:34;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;808:34:9;;;;;;;;;;;;;;;;789:53;;888:19;:29;908:8;888:29;;;;;;;;;;;;;;;;;;;;;;;;;;;887:30;879:70;;;;;;;;;;;;;;;;;;;;;;;;1065:1;998:7;1011:50;;;;;;;;;1018:5;1011:50;;;;1025:4;1011:50;;;;1031:1;1011:50;;;;;;1047:6;1041:3;:12;1011:50;;;;;;1056:1;1011:50;;;;;;1059:1;1011:50;;;;;998:64;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;998:64:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:68;988:78;;1094:10;1074:13;:17;1088:2;1074:17;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1112:16;:28;1129:10;1112:28;;;;;;;;;;;;;;;;:30;;;;;;;;;;;;;1182:4;1150:19;:29;1170:8;1150:29;;;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;1222:26;1232:2;1236:5;1243:4;1222:26;;;;;;;;;;;;;;;;;724:529;;;;:::o;1282:165::-;1345:4;1359:9;1403:4;1386:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1386:22:9;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1386:22:9;;;1376:33;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;51:19;36:153;;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1376:33:9;;;;;;;;;;;;;;;;1371:39;;;1359:51;;1432:10;;1425:4;:17;;;;;;;;1418:24;;1282:165;;;;:::o;1678:107:6:-;1734:6;1760:1;1755:6;;:1;:6;;;;1748:14;;;;;;1779:1;1775;:5;1768:12;;1678:107;;;;:::o;1772:169:5:-;1861:1;1841:22;;:8;:22;;;;1833:31;;;;;;;;1904:8;1875:38;;1896:6;;;;;;;;;;;1875:38;;;;;;;;;;;;1928:8;1919:6;;:17;;;;;;;;;;;;;;;;;;1772:169;:::o;130:839:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;;57:66;;;;;130:116;;205:36;233:6;227:13;205:36;;;196:45;;190:56;;;;;253:118;;320:46;358:6;345:20;320:46;;;311:55;;305:66;;;;;393:336;;;508:3;501:4;493:6;489:17;485:27;478:35;475:2;;;526:1;523;516:12;475:2;559:6;546:20;536:30;;586:18;578:6;575:30;572:2;;;618:1;615;608:12;572:2;652:4;644:6;640:17;628:29;;702:3;695;687:6;683:16;673:8;669:31;666:40;663:2;;;719:1;716;709:12;663:2;468:261;;;;;;738:442;;840:3;833:4;825:6;821:17;817:27;810:35;807:2;;;858:1;855;848:12;807:2;895:6;882:20;917:65;932:49;974:6;932:49;;;917:65;;;908:74;;1002:6;995:5;988:21;1038:4;1030:6;1026:17;1071:4;1064:5;1060:16;1106:3;1097:6;1092:3;1088:16;1085:25;1082:2;;;1123:1;1120;1113:12;1082:2;1133:41;1167:6;1162:3;1157;1133:41;;;800:380;;;;;;;;1188:118;;1255:46;1293:6;1280:20;1255:46;;;1246:55;;1240:66;;;;;1313:122;;1391:39;1422:6;1416:13;1391:39;;;1382:48;;1376:59;;;;;1442:241;;1546:2;1534:9;1525:7;1521:23;1517:32;1514:2;;;1562:1;1559;1552:12;1514:2;1597:1;1614:53;1659:7;1650:6;1639:9;1635:22;1614:53;;;1604:63;;1576:97;1508:175;;;;;1690:1482;;;;;;;;;;;1952:3;1940:9;1931:7;1927:23;1923:33;1920:2;;;1969:1;1966;1959:12;1920:2;2004:1;2021:61;2074:7;2065:6;2054:9;2050:22;2021:61;;;2011:71;;1983:105;2119:2;2137:61;2190:7;2181:6;2170:9;2166:22;2137:61;;;2127:71;;2098:106;2235:2;2253:64;2309:7;2300:6;2289:9;2285:22;2253:64;;;2243:74;;2214:109;2354:2;2372:64;2428:7;2419:6;2408:9;2404:22;2372:64;;;2362:74;;2333:109;2473:3;2492:64;2548:7;2539:6;2528:9;2524:22;2492:64;;;2482:74;;2452:110;2593:3;2612:64;2668:7;2659:6;2648:9;2644:22;2612:64;;;2602:74;;2572:110;2713:3;2732:64;2788:7;2779:6;2768:9;2764:22;2732:64;;;2722:74;;2692:110;2833:3;2852:64;2908:7;2899:6;2888:9;2884:22;2852:64;;;2842:74;;2812:110;2953:3;2972:64;3028:7;3019:6;3008:9;3004:22;2972:64;;;2962:74;;2932:110;3073:3;3092:64;3148:7;3139:6;3128:9;3124:22;3092:64;;;3082:74;;3052:110;1914:1258;;;;;;;;;;;;;;3179:241;;3283:2;3271:9;3262:7;3258:23;3254:32;3251:2;;;3299:1;3296;3289:12;3251:2;3334:1;3351:53;3396:7;3387:6;3376:9;3372:22;3351:53;;;3341:63;;3313:97;3245:175;;;;;3427:347;;3541:2;3529:9;3520:7;3516:23;3512:32;3509:2;;;3557:1;3554;3547:12;3509:2;3620:1;3609:9;3605:17;3592:31;3643:18;3635:6;3632:30;3629:2;;;3675:1;3672;3665:12;3629:2;3695:63;3750:7;3741:6;3730:9;3726:22;3695:63;;;3685:73;;3571:193;3503:271;;;;;3781:241;;3885:2;3873:9;3864:7;3860:23;3856:32;3853:2;;;3901:1;3898;3891:12;3853:2;3936:1;3953:53;3998:7;3989:6;3978:9;3974:22;3953:53;;;3943:63;;3915:97;3847:175;;;;;4029:492;;;;4170:2;4158:9;4149:7;4145:23;4141:32;4138:2;;;4186:1;4183;4176:12;4138:2;4221:1;4238:53;4283:7;4274:6;4263:9;4259:22;4238:53;;;4228:63;;4200:97;4356:2;4345:9;4341:18;4328:32;4380:18;4372:6;4369:30;4366:2;;;4412:1;4409;4402:12;4366:2;4440:65;4497:7;4488:6;4477:9;4473:22;4440:65;;;4422:83;;;;4307:204;4132:389;;;;;;4528:366;;;4649:2;4637:9;4628:7;4624:23;4620:32;4617:2;;;4665:1;4662;4655:12;4617:2;4700:1;4717:53;4762:7;4753:6;4742:9;4738:22;4717:53;;;4707:63;;4679:97;4807:2;4825:53;4870:7;4861:6;4850:9;4846:22;4825:53;;;4815:63;;4786:98;4611:283;;;;;;4901:110;4974:31;4999:5;4974:31;;;4969:3;4962:44;4956:55;;;5049:590;;5184:54;5232:5;5184:54;;;5256:6;5251:3;5244:19;5280:4;5275:3;5271:14;5264:21;;5325:56;5375:5;5325:56;;;5402:1;5387:230;5412:6;5409:1;5406:13;5387:230;;;5452:53;5501:3;5492:6;5486:13;5452:53;;;5522:60;5575:6;5522:60;;;5512:70;;5605:4;5600:3;5596:14;5589:21;;5434:1;5431;5427:9;5422:14;;5387:230;;;5391:14;5630:3;5623:10;;5163:476;;;;;;;5647:101;5714:28;5736:5;5714:28;;;5709:3;5702:41;5696:52;;;5755:300;;5857:39;5890:5;5857:39;;;5913:6;5908:3;5901:19;5925:63;5981:6;5974:4;5969:3;5965:14;5958:4;5951:5;5947:16;5925:63;;;6020:29;6042:6;6020:29;;;6013:4;6008:3;6004:14;6000:50;5993:57;;5837:218;;;;;;6062:292;;6160:35;6189:5;6160:35;;;6212:6;6207:3;6200:19;6224:63;6280:6;6273:4;6268:3;6264:14;6257:4;6250:5;6246:16;6224:63;;;6319:29;6341:6;6319:29;;;6312:4;6307:3;6303:14;6299:50;6292:57;;6140:214;;;;;;6362:397;;6517:2;6512:3;6505:15;6554:66;6549:2;6544:3;6540:12;6533:88;6655:66;6650:2;6645:3;6641:12;6634:88;6750:2;6745:3;6741:12;6734:19;;6498:261;;;;6768:296;;6923:2;6918:3;6911:15;6960:66;6955:2;6950:3;6946:12;6939:88;7055:2;7050:3;7046:12;7039:19;;6904:160;;;;7072:107;7143:30;7167:5;7143:30;;;7138:3;7131:43;7125:54;;;7186:110;7259:31;7284:5;7259:31;;;7254:3;7247:44;7241:55;;;7303:107;7374:30;7398:5;7374:30;;;7369:3;7362:43;7356:54;;;7417:193;;7525:2;7514:9;7510:18;7502:26;;7539:61;7597:1;7586:9;7582:17;7573:6;7539:61;;;7496:114;;;;;7617:341;;7775:2;7764:9;7760:18;7752:26;;7825:9;7819:4;7815:20;7811:1;7800:9;7796:17;7789:47;7850:98;7943:4;7934:6;7850:98;;;7842:106;;7746:212;;;;;7965:181;;8067:2;8056:9;8052:18;8044:26;;8081:55;8133:1;8122:9;8118:17;8109:6;8081:55;;;8038:108;;;;;8153:374;;8305:2;8294:9;8290:18;8282:26;;8355:9;8349:4;8345:20;8341:1;8330:9;8326:17;8319:47;8380:64;8439:4;8430:6;8380:64;;;8372:72;;8455:62;8513:2;8502:9;8498:18;8489:6;8455:62;;;8276:251;;;;;;8534:765;;8790:3;8779:9;8775:19;8767:27;;8841:9;8835:4;8831:20;8827:1;8816:9;8812:17;8805:47;8866:64;8925:4;8916:6;8866:64;;;8858:72;;8941:62;8999:2;8988:9;8984:18;8975:6;8941:62;;;9014:60;9070:2;9059:9;9055:18;9046:6;9014:60;;;9085;9141:2;9130:9;9126:18;9117:6;9085:60;;;9156:61;9212:3;9201:9;9197:19;9188:6;9156:61;;;9228;9284:3;9273:9;9269:19;9260:6;9228:61;;;8761:538;;;;;;;;;;9306:387;;9487:2;9476:9;9472:18;9464:26;;9537:9;9531:4;9527:20;9523:1;9512:9;9508:17;9501:47;9562:121;9678:4;9562:121;;;9554:129;;9458:235;;;;9700:387;;9881:2;9870:9;9866:18;9858:26;;9931:9;9925:4;9921:20;9917:1;9906:9;9902:17;9895:47;9956:121;10072:4;9956:121;;;9948:129;;9852:235;;;;10094:193;;10202:2;10191:9;10187:18;10179:26;;10216:61;10274:1;10263:9;10259:17;10250:6;10216:61;;;10173:114;;;;;10294:483;;10478:2;10467:9;10463:18;10455:26;;10492:61;10550:1;10539:9;10535:17;10526:6;10492:61;;;10601:9;10595:4;10591:20;10586:2;10575:9;10571:18;10564:48;10626:68;10689:4;10680:6;10626:68;;;10618:76;;10705:62;10763:2;10752:9;10748:18;10739:6;10705:62;;;10449:328;;;;;;;10784:256;;10846:2;10840:9;10830:19;;10884:4;10876:6;10872:17;10983:6;10971:10;10968:22;10947:18;10935:10;10932:34;10929:62;10926:2;;;11004:1;11001;10994:12;10926:2;11024:10;11020:2;11013:22;10824:216;;;;;11047:259;;11191:18;11183:6;11180:30;11177:2;;;11223:1;11220;11213:12;11177:2;11267:4;11263:9;11256:4;11248:6;11244:17;11240:33;11232:41;;11296:4;11290;11286:15;11278:23;;11114:192;;;;11315:121;;11424:4;11416:6;11412:17;11401:28;;11393:43;;;;11445:107;;11541:5;11535:12;11525:22;;11519:33;;;;11559:88;;11636:5;11630:12;11620:22;;11614:33;;;;11654:92;;11735:5;11729:12;11719:22;;11713:33;;;;11754:122;;11865:4;11857:6;11853:17;11842:28;;11835:41;;;;11884:128;;11964:42;11957:5;11953:54;11942:65;;11936:76;;;;12019:92;;12099:5;12092:13;12085:21;12074:32;;12068:43;;;;12118:91;;12197:6;12190:5;12186:18;12175:29;;12169:40;;;;12216:79;;12285:5;12274:16;;12268:27;;;;12302:95;;12381:10;12374:5;12370:22;12359:33;;12353:44;;;;12404:128;;12484:42;12477:5;12473:54;12462:65;;12456:76;;;;12539:92;;12619:5;12612:13;12605:21;12594:32;;12588:43;;;;12638:79;;12707:5;12696:16;;12690:27;;;;12724:79;;12793:5;12782:16;;12776:27;;;;12811:145;12892:6;12887:3;12882;12869:30;12948:1;12939:6;12934:3;12930:16;12923:27;12862:94;;;;12965:268;13030:1;13037:101;13051:6;13048:1;13045:13;13037:101;;;13127:1;13122:3;13118:11;13112:18;13108:1;13103:3;13099:11;13092:39;13073:2;13070:1;13066:10;13061:15;;13037:101;;;13153:6;13150:1;13147:13;13144:2;;;13218:1;13209:6;13204:3;13200:16;13193:27;13144:2;13014:219;;;;;13241:97;;13329:2;13325:7;13320:2;13313:5;13309:14;13305:28;13295:38;;13289:49;;;",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.4.25;\r\n\r\npragma experimental ABIEncoderV2;\r\n\r\nimport \"./zombiehelper.sol\";\r\n\r\ncontract ZombieLeaderboard is ZombieHelper {\r\n    struct Leader {\r\n        string name;\r\n        uint winCount;\r\n    }\r\n\r\n    Leader[] public leaderboard;\r\n\r\n    event LeaderboardUpdated(string name, uint winCount);\r\n\r\n    function updateLeaderboard(uint _zombieId) internal {\r\n    string memory zombieName = zombies[_zombieId].name;\r\n    uint zombieWins = zombies[_zombieId].winCount;\r\n\r\n    bool exists = false;\r\n    for (uint i = 0; i < leaderboard.length; i++) {\r\n        if (keccak256(abi.encodePacked(leaderboard[i].name)) == keccak256(abi.encodePacked(zombieName))) {\r\n            leaderboard[i].winCount = zombieWins;\r\n            exists = true;\r\n            break;\r\n        }\r\n    }\r\n    if (!exists) {\r\n        leaderboard.push(Leader(zombieName, zombieWins));\r\n    }\r\n\r\n    emit LeaderboardUpdated(zombieName, zombieWins);\r\n}\r\n}\r\n",
  "sourcePath": "C:\\Users\\Manoj\\OneDrive\\Desktop\\Adv_Blockchain\\CryptoZombie\\contracts\\ZombieLeaderboard.sol",
  "ast": {
    "absolutePath": "project:/contracts/ZombieLeaderboard.sol",
    "exportedSymbols": {
      "ZombieLeaderboard": [
        144
      ]
    },
    "id": 145,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 40,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".25"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:2"
      },
      {
        "id": 41,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "61:33:2"
      },
      {
        "absolutePath": "project:/contracts/zombiehelper.sol",
        "file": "./zombiehelper.sol",
        "id": 42,
        "nodeType": "ImportDirective",
        "scope": 145,
        "sourceUnit": 1767,
        "src": "98:28:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 43,
              "name": "ZombieHelper",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1766,
              "src": "160:12:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ZombieHelper_$1766",
                "typeString": "contract ZombieHelper"
              }
            },
            "id": 44,
            "nodeType": "InheritanceSpecifier",
            "src": "160:12:2"
          }
        ],
        "contractDependencies": [
          574,
          1278,
          1485,
          1766
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 144,
        "linearizedBaseContracts": [
          144,
          1766,
          1485,
          1278,
          574
        ],
        "name": "ZombieLeaderboard",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "ZombieLeaderboard.Leader",
            "id": 49,
            "members": [
              {
                "constant": false,
                "id": 46,
                "name": "name",
                "nodeType": "VariableDeclaration",
                "scope": 49,
                "src": "205:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 45,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "205:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 48,
                "name": "winCount",
                "nodeType": "VariableDeclaration",
                "scope": 49,
                "src": "227:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 47,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "227:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Leader",
            "nodeType": "StructDefinition",
            "scope": 144,
            "src": "180:68:2",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 52,
            "name": "leaderboard",
            "nodeType": "VariableDeclaration",
            "scope": 144,
            "src": "256:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Leader_$49_storage_$dyn_storage",
              "typeString": "struct ZombieLeaderboard.Leader[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 50,
                "name": "Leader",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 49,
                "src": "256:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Leader_$49_storage_ptr",
                  "typeString": "struct ZombieLeaderboard.Leader"
                }
              },
              "id": 51,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "256:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Leader_$49_storage_$dyn_storage_ptr",
                "typeString": "struct ZombieLeaderboard.Leader[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 58,
            "name": "LeaderboardUpdated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "indexed": false,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "317:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "317:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "indexed": false,
                  "name": "winCount",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "330:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "330:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "316:28:2"
            },
            "src": "292:53:2"
          },
          {
            "body": {
              "id": 142,
              "nodeType": "Block",
              "src": "405:561:2",
              "statements": [
                {
                  "assignments": [
                    64
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 64,
                      "name": "zombieName",
                      "nodeType": "VariableDeclaration",
                      "scope": 143,
                      "src": "412:24:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 63,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "412:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 69,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 65,
                        "name": "zombies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1138,
                        "src": "439:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Zombie_$1135_storage_$dyn_storage",
                          "typeString": "struct ZombieFactory.Zombie storage ref[] storage ref"
                        }
                      },
                      "id": 67,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 66,
                        "name": "_zombieId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "447:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "439:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Zombie_$1135_storage",
                        "typeString": "struct ZombieFactory.Zombie storage ref"
                      }
                    },
                    "id": 68,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "name",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1124,
                    "src": "439:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "412:50:2"
                },
                {
                  "assignments": [
                    71
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 71,
                      "name": "zombieWins",
                      "nodeType": "VariableDeclaration",
                      "scope": 143,
                      "src": "469:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 70,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "469:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 76,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 72,
                        "name": "zombies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1138,
                        "src": "487:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Zombie_$1135_storage_$dyn_storage",
                          "typeString": "struct ZombieFactory.Zombie storage ref[] storage ref"
                        }
                      },
                      "id": 74,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 73,
                        "name": "_zombieId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60,
                        "src": "495:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "487:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Zombie_$1135_storage",
                        "typeString": "struct ZombieFactory.Zombie storage ref"
                      }
                    },
                    "id": 75,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "winCount",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1132,
                    "src": "487:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "469:45:2"
                },
                {
                  "assignments": [
                    78
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78,
                      "name": "exists",
                      "nodeType": "VariableDeclaration",
                      "scope": 143,
                      "src": "523:11:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 77,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "523:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 80,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "66616c7365",
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "537:5:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "523:19:2"
                },
                {
                  "body": {
                    "id": 122,
                    "nodeType": "Block",
                    "src": "595:226:2",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "baseExpression": {
                                        "argumentTypes": null,
                                        "id": 95,
                                        "name": "leaderboard",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 52,
                                        "src": "637:11:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Leader_$49_storage_$dyn_storage",
                                          "typeString": "struct ZombieLeaderboard.Leader storage ref[] storage ref"
                                        }
                                      },
                                      "id": 97,
                                      "indexExpression": {
                                        "argumentTypes": null,
                                        "id": 96,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 82,
                                        "src": "649:1:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "637:14:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Leader_$49_storage",
                                        "typeString": "struct ZombieLeaderboard.Leader storage ref"
                                      }
                                    },
                                    "id": 98,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "name",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 46,
                                    "src": "637:19:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 93,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1911,
                                    "src": "620:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 94,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "620:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 99,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "620:37:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 92,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1918,
                              "src": "610:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                                "typeString": "function () pure returns (bytes32)"
                              }
                            },
                            "id": 100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "610:48:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 104,
                                    "name": "zombieName",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 64,
                                    "src": "689:10:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 102,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1911,
                                    "src": "672:3:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 103,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "672:16:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 105,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "672:28:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 101,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1918,
                              "src": "662:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                                "typeString": "function () pure returns (bytes32)"
                              }
                            },
                            "id": 106,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "662:39:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "610:91:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 121,
                        "nodeType": "IfStatement",
                        "src": "606:208:2",
                        "trueBody": {
                          "id": 120,
                          "nodeType": "Block",
                          "src": "703:111:2",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 113,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 108,
                                      "name": "leaderboard",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 52,
                                      "src": "718:11:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Leader_$49_storage_$dyn_storage",
                                        "typeString": "struct ZombieLeaderboard.Leader storage ref[] storage ref"
                                      }
                                    },
                                    "id": 110,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 109,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 82,
                                      "src": "730:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "718:14:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Leader_$49_storage",
                                      "typeString": "struct ZombieLeaderboard.Leader storage ref"
                                    }
                                  },
                                  "id": 111,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "winCount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 48,
                                  "src": "718:23:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 112,
                                  "name": "zombieWins",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 71,
                                  "src": "744:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "718:36:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 114,
                              "nodeType": "ExpressionStatement",
                              "src": "718:36:2"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "id": 115,
                                  "name": "exists",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 78,
                                  "src": "769:6:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 116,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "778:4:2",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "769:13:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 118,
                              "nodeType": "ExpressionStatement",
                              "src": "769:13:2"
                            },
                            {
                              "id": 119,
                              "nodeType": "Break",
                              "src": "797:5:2"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 85,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 82,
                      "src": "566:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 86,
                        "name": "leaderboard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 52,
                        "src": "570:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Leader_$49_storage_$dyn_storage",
                          "typeString": "struct ZombieLeaderboard.Leader storage ref[] storage ref"
                        }
                      },
                      "id": 87,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "570:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "566:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 123,
                  "initializationExpression": {
                    "assignments": [
                      82
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 82,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 143,
                        "src": "554:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 81,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "554:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 84,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 83,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "563:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "554:10:2"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 90,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "590:3:2",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 89,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "590:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 91,
                    "nodeType": "ExpressionStatement",
                    "src": "590:3:2"
                  },
                  "nodeType": "ForStatement",
                  "src": "549:272:2"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "831:7:2",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 124,
                      "name": "exists",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "832:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 136,
                  "nodeType": "IfStatement",
                  "src": "827:80:2",
                  "trueBody": {
                    "id": 135,
                    "nodeType": "Block",
                    "src": "840:67:2",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 130,
                                  "name": "zombieName",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 64,
                                  "src": "875:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 131,
                                  "name": "zombieWins",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 71,
                                  "src": "887:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 129,
                                "name": "Leader",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 49,
                                "src": "868:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_Leader_$49_storage_ptr_$",
                                  "typeString": "type(struct ZombieLeaderboard.Leader storage pointer)"
                                }
                              },
                              "id": 132,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "868:30:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Leader_$49_memory",
                                "typeString": "struct ZombieLeaderboard.Leader memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Leader_$49_memory",
                                "typeString": "struct ZombieLeaderboard.Leader memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 126,
                              "name": "leaderboard",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52,
                              "src": "851:11:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Leader_$49_storage_$dyn_storage",
                                "typeString": "struct ZombieLeaderboard.Leader storage ref[] storage ref"
                              }
                            },
                            "id": 128,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "851:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Leader_$49_storage_$returns$_t_uint256_$",
                              "typeString": "function (struct ZombieLeaderboard.Leader storage ref) returns (uint256)"
                            }
                          },
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "851:48:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 134,
                        "nodeType": "ExpressionStatement",
                        "src": "851:48:2"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 138,
                        "name": "zombieName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 64,
                        "src": "939:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 139,
                        "name": "zombieWins",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "951:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 137,
                      "name": "LeaderboardUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "920:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256)"
                      }
                    },
                    "id": 140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "920:42:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 141,
                  "nodeType": "EmitStatement",
                  "src": "915:47:2"
                }
              ]
            },
            "documentation": null,
            "id": 143,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "updateLeaderboard",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "name": "_zombieId",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "380:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "380:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "379:16:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "405:0:2"
            },
            "scope": 144,
            "src": "353:613:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 145,
        "src": "130:839:2"
      }
    ],
    "src": "33:938:2"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/ZombieLeaderboard.sol",
      "exportedSymbols": {
        "ZombieLeaderboard": [
          144
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.4",
            ".25"
          ]
        },
        "id": 40,
        "name": "PragmaDirective",
        "src": "33:24:2"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 41,
        "name": "PragmaDirective",
        "src": "61:33:2"
      },
      {
        "attributes": {
          "SourceUnit": 1767,
          "absolutePath": "project:/contracts/zombiehelper.sol",
          "file": "./zombiehelper.sol",
          "scope": 145,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 42,
        "name": "ImportDirective",
        "src": "98:28:2"
      },
      {
        "attributes": {
          "contractDependencies": [
            574,
            1278,
            1485,
            1766
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            144,
            1766,
            1485,
            1278,
            574
          ],
          "name": "ZombieLeaderboard",
          "scope": 145
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ZombieHelper",
                  "referencedDeclaration": 1766,
                  "type": "contract ZombieHelper"
                },
                "id": 43,
                "name": "UserDefinedTypeName",
                "src": "160:12:2"
              }
            ],
            "id": 44,
            "name": "InheritanceSpecifier",
            "src": "160:12:2"
          },
          {
            "attributes": {
              "canonicalName": "ZombieLeaderboard.Leader",
              "name": "Leader",
              "scope": 144,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "name",
                  "scope": 49,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 45,
                    "name": "ElementaryTypeName",
                    "src": "205:6:2"
                  }
                ],
                "id": 46,
                "name": "VariableDeclaration",
                "src": "205:11:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "winCount",
                  "scope": 49,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 47,
                    "name": "ElementaryTypeName",
                    "src": "227:4:2"
                  }
                ],
                "id": 48,
                "name": "VariableDeclaration",
                "src": "227:13:2"
              }
            ],
            "id": 49,
            "name": "StructDefinition",
            "src": "180:68:2"
          },
          {
            "attributes": {
              "constant": false,
              "name": "leaderboard",
              "scope": 144,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct ZombieLeaderboard.Leader[]",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "length": null,
                  "type": "struct ZombieLeaderboard.Leader[]"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Leader",
                      "referencedDeclaration": 49,
                      "type": "struct ZombieLeaderboard.Leader"
                    },
                    "id": 50,
                    "name": "UserDefinedTypeName",
                    "src": "256:6:2"
                  }
                ],
                "id": 51,
                "name": "ArrayTypeName",
                "src": "256:8:2"
              }
            ],
            "id": 52,
            "name": "VariableDeclaration",
            "src": "256:27:2"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "LeaderboardUpdated"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "name",
                      "scope": 58,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 53,
                        "name": "ElementaryTypeName",
                        "src": "317:6:2"
                      }
                    ],
                    "id": 54,
                    "name": "VariableDeclaration",
                    "src": "317:11:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "winCount",
                      "scope": 58,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 55,
                        "name": "ElementaryTypeName",
                        "src": "330:4:2"
                      }
                    ],
                    "id": 56,
                    "name": "VariableDeclaration",
                    "src": "330:13:2"
                  }
                ],
                "id": 57,
                "name": "ParameterList",
                "src": "316:28:2"
              }
            ],
            "id": 58,
            "name": "EventDefinition",
            "src": "292:53:2"
          },
          {
            "attributes": {
              "constant": false,
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "updateLeaderboard",
              "payable": false,
              "scope": 144,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_zombieId",
                      "scope": 143,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 59,
                        "name": "ElementaryTypeName",
                        "src": "380:4:2"
                      }
                    ],
                    "id": 60,
                    "name": "VariableDeclaration",
                    "src": "380:14:2"
                  }
                ],
                "id": 61,
                "name": "ParameterList",
                "src": "379:16:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 62,
                "name": "ParameterList",
                "src": "405:0:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        64
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "zombieName",
                          "scope": 143,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "string",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "string",
                              "type": "string"
                            },
                            "id": 63,
                            "name": "ElementaryTypeName",
                            "src": "412:6:2"
                          }
                        ],
                        "id": 64,
                        "name": "VariableDeclaration",
                        "src": "412:24:2"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "name",
                          "referencedDeclaration": 1124,
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "struct ZombieFactory.Zombie storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1138,
                                  "type": "struct ZombieFactory.Zombie storage ref[] storage ref",
                                  "value": "zombies"
                                },
                                "id": 65,
                                "name": "Identifier",
                                "src": "439:7:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 60,
                                  "type": "uint256",
                                  "value": "_zombieId"
                                },
                                "id": 66,
                                "name": "Identifier",
                                "src": "447:9:2"
                              }
                            ],
                            "id": 67,
                            "name": "IndexAccess",
                            "src": "439:18:2"
                          }
                        ],
                        "id": 68,
                        "name": "MemberAccess",
                        "src": "439:23:2"
                      }
                    ],
                    "id": 69,
                    "name": "VariableDeclarationStatement",
                    "src": "412:50:2"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        71
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "zombieWins",
                          "scope": 143,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 70,
                            "name": "ElementaryTypeName",
                            "src": "469:4:2"
                          }
                        ],
                        "id": 71,
                        "name": "VariableDeclaration",
                        "src": "469:15:2"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "winCount",
                          "referencedDeclaration": 1132,
                          "type": "uint16"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "struct ZombieFactory.Zombie storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1138,
                                  "type": "struct ZombieFactory.Zombie storage ref[] storage ref",
                                  "value": "zombies"
                                },
                                "id": 72,
                                "name": "Identifier",
                                "src": "487:7:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 60,
                                  "type": "uint256",
                                  "value": "_zombieId"
                                },
                                "id": 73,
                                "name": "Identifier",
                                "src": "495:9:2"
                              }
                            ],
                            "id": 74,
                            "name": "IndexAccess",
                            "src": "487:18:2"
                          }
                        ],
                        "id": 75,
                        "name": "MemberAccess",
                        "src": "487:27:2"
                      }
                    ],
                    "id": 76,
                    "name": "VariableDeclarationStatement",
                    "src": "469:45:2"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        78
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "exists",
                          "scope": 143,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bool",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bool",
                              "type": "bool"
                            },
                            "id": 77,
                            "name": "ElementaryTypeName",
                            "src": "523:4:2"
                          }
                        ],
                        "id": 78,
                        "name": "VariableDeclaration",
                        "src": "523:11:2"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "66616c7365",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "bool",
                          "type": "bool",
                          "value": "false"
                        },
                        "id": 79,
                        "name": "Literal",
                        "src": "537:5:2"
                      }
                    ],
                    "id": 80,
                    "name": "VariableDeclarationStatement",
                    "src": "523:19:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "assignments": [
                            82
                          ]
                        },
                        "children": [
                          {
                            "attributes": {
                              "constant": false,
                              "name": "i",
                              "scope": 143,
                              "stateVariable": false,
                              "storageLocation": "default",
                              "type": "uint256",
                              "value": null,
                              "visibility": "internal"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint",
                                  "type": "uint256"
                                },
                                "id": 81,
                                "name": "ElementaryTypeName",
                                "src": "554:4:2"
                              }
                            ],
                            "id": 82,
                            "name": "VariableDeclaration",
                            "src": "554:6:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 83,
                            "name": "Literal",
                            "src": "563:1:2"
                          }
                        ],
                        "id": 84,
                        "name": "VariableDeclarationStatement",
                        "src": "554:10:2"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 82,
                              "type": "uint256",
                              "value": "i"
                            },
                            "id": 85,
                            "name": "Identifier",
                            "src": "566:1:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 52,
                                  "type": "struct ZombieLeaderboard.Leader storage ref[] storage ref",
                                  "value": "leaderboard"
                                },
                                "id": 86,
                                "name": "Identifier",
                                "src": "570:11:2"
                              }
                            ],
                            "id": 87,
                            "name": "MemberAccess",
                            "src": "570:18:2"
                          }
                        ],
                        "id": 88,
                        "name": "BinaryOperation",
                        "src": "566:22:2"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "++",
                              "prefix": false,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 82,
                                  "type": "uint256",
                                  "value": "i"
                                },
                                "id": 89,
                                "name": "Identifier",
                                "src": "590:1:2"
                              }
                            ],
                            "id": 90,
                            "name": "UnaryOperation",
                            "src": "590:3:2"
                          }
                        ],
                        "id": 91,
                        "name": "ExpressionStatement",
                        "src": "590:3:2"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "falseBody": null
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "==",
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bytes32",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1918,
                                          "type": "function () pure returns (bytes32)",
                                          "value": "keccak256"
                                        },
                                        "id": 92,
                                        "name": "Identifier",
                                        "src": "610:9:2"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "type": "bytes memory",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_string_storage",
                                                  "typeString": "string storage ref"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "member_name": "encodePacked",
                                              "referencedDeclaration": null,
                                              "type": "function () pure returns (bytes memory)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 1911,
                                                  "type": "abi",
                                                  "value": "abi"
                                                },
                                                "id": 93,
                                                "name": "Identifier",
                                                "src": "620:3:2"
                                              }
                                            ],
                                            "id": 94,
                                            "name": "MemberAccess",
                                            "src": "620:16:2"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "member_name": "name",
                                              "referencedDeclaration": 46,
                                              "type": "string storage ref"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct ZombieLeaderboard.Leader storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 52,
                                                      "type": "struct ZombieLeaderboard.Leader storage ref[] storage ref",
                                                      "value": "leaderboard"
                                                    },
                                                    "id": 95,
                                                    "name": "Identifier",
                                                    "src": "637:11:2"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 82,
                                                      "type": "uint256",
                                                      "value": "i"
                                                    },
                                                    "id": 96,
                                                    "name": "Identifier",
                                                    "src": "649:1:2"
                                                  }
                                                ],
                                                "id": 97,
                                                "name": "IndexAccess",
                                                "src": "637:14:2"
                                              }
                                            ],
                                            "id": 98,
                                            "name": "MemberAccess",
                                            "src": "637:19:2"
                                          }
                                        ],
                                        "id": 99,
                                        "name": "FunctionCall",
                                        "src": "620:37:2"
                                      }
                                    ],
                                    "id": 100,
                                    "name": "FunctionCall",
                                    "src": "610:48:2"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bytes32",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 1918,
                                          "type": "function () pure returns (bytes32)",
                                          "value": "keccak256"
                                        },
                                        "id": 101,
                                        "name": "Identifier",
                                        "src": "662:9:2"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "isStructConstructorCall": false,
                                          "lValueRequested": false,
                                          "names": [
                                            null
                                          ],
                                          "type": "bytes memory",
                                          "type_conversion": false
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_string_memory_ptr",
                                                  "typeString": "string memory"
                                                }
                                              ],
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "member_name": "encodePacked",
                                              "referencedDeclaration": null,
                                              "type": "function () pure returns (bytes memory)"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "overloadedDeclarations": [
                                                    null
                                                  ],
                                                  "referencedDeclaration": 1911,
                                                  "type": "abi",
                                                  "value": "abi"
                                                },
                                                "id": 102,
                                                "name": "Identifier",
                                                "src": "672:3:2"
                                              }
                                            ],
                                            "id": 103,
                                            "name": "MemberAccess",
                                            "src": "672:16:2"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 64,
                                              "type": "string memory",
                                              "value": "zombieName"
                                            },
                                            "id": 104,
                                            "name": "Identifier",
                                            "src": "689:10:2"
                                          }
                                        ],
                                        "id": 105,
                                        "name": "FunctionCall",
                                        "src": "672:28:2"
                                      }
                                    ],
                                    "id": 106,
                                    "name": "FunctionCall",
                                    "src": "662:39:2"
                                  }
                                ],
                                "id": 107,
                                "name": "BinaryOperation",
                                "src": "610:91:2"
                              },
                              {
                                "children": [
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "uint256"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "member_name": "winCount",
                                              "referencedDeclaration": 48,
                                              "type": "uint256"
                                            },
                                            "children": [
                                              {
                                                "attributes": {
                                                  "argumentTypes": null,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "type": "struct ZombieLeaderboard.Leader storage ref"
                                                },
                                                "children": [
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 52,
                                                      "type": "struct ZombieLeaderboard.Leader storage ref[] storage ref",
                                                      "value": "leaderboard"
                                                    },
                                                    "id": 108,
                                                    "name": "Identifier",
                                                    "src": "718:11:2"
                                                  },
                                                  {
                                                    "attributes": {
                                                      "argumentTypes": null,
                                                      "overloadedDeclarations": [
                                                        null
                                                      ],
                                                      "referencedDeclaration": 82,
                                                      "type": "uint256",
                                                      "value": "i"
                                                    },
                                                    "id": 109,
                                                    "name": "Identifier",
                                                    "src": "730:1:2"
                                                  }
                                                ],
                                                "id": 110,
                                                "name": "IndexAccess",
                                                "src": "718:14:2"
                                              }
                                            ],
                                            "id": 111,
                                            "name": "MemberAccess",
                                            "src": "718:23:2"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 71,
                                              "type": "uint256",
                                              "value": "zombieWins"
                                            },
                                            "id": 112,
                                            "name": "Identifier",
                                            "src": "744:10:2"
                                          }
                                        ],
                                        "id": 113,
                                        "name": "Assignment",
                                        "src": "718:36:2"
                                      }
                                    ],
                                    "id": 114,
                                    "name": "ExpressionStatement",
                                    "src": "718:36:2"
                                  },
                                  {
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "operator": "=",
                                          "type": "bool"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 78,
                                              "type": "bool",
                                              "value": "exists"
                                            },
                                            "id": 115,
                                            "name": "Identifier",
                                            "src": "769:6:2"
                                          },
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "hexvalue": "74727565",
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "subdenomination": null,
                                              "token": "bool",
                                              "type": "bool",
                                              "value": "true"
                                            },
                                            "id": 116,
                                            "name": "Literal",
                                            "src": "778:4:2"
                                          }
                                        ],
                                        "id": 117,
                                        "name": "Assignment",
                                        "src": "769:13:2"
                                      }
                                    ],
                                    "id": 118,
                                    "name": "ExpressionStatement",
                                    "src": "769:13:2"
                                  },
                                  {
                                    "id": 119,
                                    "name": "Break",
                                    "src": "797:5:2"
                                  }
                                ],
                                "id": 120,
                                "name": "Block",
                                "src": "703:111:2"
                              }
                            ],
                            "id": 121,
                            "name": "IfStatement",
                            "src": "606:208:2"
                          }
                        ],
                        "id": 122,
                        "name": "Block",
                        "src": "595:226:2"
                      }
                    ],
                    "id": 123,
                    "name": "ForStatement",
                    "src": "549:272:2"
                  },
                  {
                    "attributes": {
                      "falseBody": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "!",
                          "prefix": true,
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 78,
                              "type": "bool",
                              "value": "exists"
                            },
                            "id": 124,
                            "name": "Identifier",
                            "src": "832:6:2"
                          }
                        ],
                        "id": 125,
                        "name": "UnaryOperation",
                        "src": "831:7:2"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "uint256",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_struct$_Leader_$49_memory",
                                          "typeString": "struct ZombieLeaderboard.Leader memory"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "push",
                                      "referencedDeclaration": null,
                                      "type": "function (struct ZombieLeaderboard.Leader storage ref) returns (uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 52,
                                          "type": "struct ZombieLeaderboard.Leader storage ref[] storage ref",
                                          "value": "leaderboard"
                                        },
                                        "id": 126,
                                        "name": "Identifier",
                                        "src": "851:11:2"
                                      }
                                    ],
                                    "id": 128,
                                    "name": "MemberAccess",
                                    "src": "851:16:2"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": true,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "struct ZombieLeaderboard.Leader memory",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_string_memory_ptr",
                                              "typeString": "string memory"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 49,
                                          "type": "type(struct ZombieLeaderboard.Leader storage pointer)",
                                          "value": "Leader"
                                        },
                                        "id": 129,
                                        "name": "Identifier",
                                        "src": "868:6:2"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 64,
                                          "type": "string memory",
                                          "value": "zombieName"
                                        },
                                        "id": 130,
                                        "name": "Identifier",
                                        "src": "875:10:2"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 71,
                                          "type": "uint256",
                                          "value": "zombieWins"
                                        },
                                        "id": 131,
                                        "name": "Identifier",
                                        "src": "887:10:2"
                                      }
                                    ],
                                    "id": 132,
                                    "name": "FunctionCall",
                                    "src": "868:30:2"
                                  }
                                ],
                                "id": 133,
                                "name": "FunctionCall",
                                "src": "851:48:2"
                              }
                            ],
                            "id": 134,
                            "name": "ExpressionStatement",
                            "src": "851:48:2"
                          }
                        ],
                        "id": 135,
                        "name": "Block",
                        "src": "840:67:2"
                      }
                    ],
                    "id": 136,
                    "name": "IfStatement",
                    "src": "827:80:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 58,
                              "type": "function (string memory,uint256)",
                              "value": "LeaderboardUpdated"
                            },
                            "id": 137,
                            "name": "Identifier",
                            "src": "920:18:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 64,
                              "type": "string memory",
                              "value": "zombieName"
                            },
                            "id": 138,
                            "name": "Identifier",
                            "src": "939:10:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 71,
                              "type": "uint256",
                              "value": "zombieWins"
                            },
                            "id": 139,
                            "name": "Identifier",
                            "src": "951:10:2"
                          }
                        ],
                        "id": 140,
                        "name": "FunctionCall",
                        "src": "920:42:2"
                      }
                    ],
                    "id": 141,
                    "name": "EmitStatement",
                    "src": "915:47:2"
                  }
                ],
                "id": 142,
                "name": "Block",
                "src": "405:561:2"
              }
            ],
            "id": 143,
            "name": "FunctionDefinition",
            "src": "353:613:2"
          }
        ],
        "id": 144,
        "name": "ContractDefinition",
        "src": "130:839:2"
      }
    ],
    "id": 145,
    "name": "SourceUnit",
    "src": "33:938:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0xb7c92dc10ee7c0d3acab964e33940a152faea97d6b1bebea24ca6d051ec5846c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "name",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "winCount",
              "type": "uint256"
            }
          ],
          "name": "LeaderboardUpdated",
          "type": "event"
        },
        "0x88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b7": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "zombieId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "name",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "dna",
              "type": "uint256"
            }
          ],
          "name": "NewZombie",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xe5fc4c550bcb007189b89b886ab116aa6762f08aa1d3acc6ed336bdba9996ef6": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "name": "zombieId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "name",
              "type": "string"
            },
            {
              "indexed": false,
              "name": "winCount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "name": "lossCount",
              "type": "uint256"
            }
          ],
          "name": "LeaderboardUpdated",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x005f2B0Fe8F130be80514038BA4edEc42DE8d8D9",
      "transactionHash": "0x778eba5cf1b82520082a6a14c4ee677880e8d32e27a1a8d6ff0abb49455042c3"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-10-20T23:33:04.910Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}